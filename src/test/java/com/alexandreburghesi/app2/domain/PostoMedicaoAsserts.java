package com.alexandreburghesi.app2.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PostoMedicaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoMedicaoAllPropertiesEquals(PostoMedicao expected, PostoMedicao actual) {
        assertPostoMedicaoAutoGeneratedPropertiesEquals(expected, actual);
        assertPostoMedicaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoMedicaoAllUpdatablePropertiesEquals(PostoMedicao expected, PostoMedicao actual) {
        assertPostoMedicaoUpdatableFieldsEquals(expected, actual);
        assertPostoMedicaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoMedicaoAutoGeneratedPropertiesEquals(PostoMedicao expected, PostoMedicao actual) {
        assertThat(actual)
            .as("Verify PostoMedicao auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoMedicaoUpdatableFieldsEquals(PostoMedicao expected, PostoMedicao actual) {
        assertThat(actual)
            .as("Verify PostoMedicao relevant properties")
            .satisfies(a -> assertThat(a.getNome()).as("check nome").isEqualTo(expected.getNome()))
            .satisfies(a ->
                assertThat(a.getNumUsinaHidreletrica()).as("check numUsinaHidreletrica").isEqualTo(expected.getNumUsinaHidreletrica())
            )
            .satisfies(a -> assertThat(a.getBacia()).as("check bacia").isEqualTo(expected.getBacia()))
            .satisfies(a -> assertThat(a.getSubbacia()).as("check subbacia").isEqualTo(expected.getSubbacia()))
            .satisfies(a -> assertThat(a.getSubmercado()).as("check submercado").isEqualTo(expected.getSubmercado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoMedicaoUpdatableRelationshipsEquals(PostoMedicao expected, PostoMedicao actual) {
        // empty method
    }
}
