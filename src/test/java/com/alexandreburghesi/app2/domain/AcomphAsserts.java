package com.alexandreburghesi.app2.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AcomphAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcomphAllPropertiesEquals(Acomph expected, Acomph actual) {
        assertAcomphAutoGeneratedPropertiesEquals(expected, actual);
        assertAcomphAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcomphAllUpdatablePropertiesEquals(Acomph expected, Acomph actual) {
        assertAcomphUpdatableFieldsEquals(expected, actual);
        assertAcomphUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcomphAutoGeneratedPropertiesEquals(Acomph expected, Acomph actual) {
        assertThat(actual)
            .as("Verify Acomph auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcomphUpdatableFieldsEquals(Acomph expected, Acomph actual) {
        assertThat(actual)
            .as("Verify Acomph relevant properties")
            .satisfies(a -> assertThat(a.getDate()).as("check date").isEqualTo(expected.getDate()))
            .satisfies(a -> assertThat(a.getVazaoDefluenteLido()).as("check vazaoDefluenteLido").isEqualTo(expected.getVazaoDefluenteLido())
            )
            .satisfies(a ->
                assertThat(a.getVazaoDefluenteConsolidado())
                    .as("check vazaoDefluenteConsolidado")
                    .isEqualTo(expected.getVazaoDefluenteConsolidado())
            )
            .satisfies(a -> assertThat(a.getVazaoAfluenteLido()).as("check vazaoAfluenteLido").isEqualTo(expected.getVazaoAfluenteLido()))
            .satisfies(a ->
                assertThat(a.getVazaoAfluenteConsolidado())
                    .as("check vazaoAfluenteConsolidado")
                    .isEqualTo(expected.getVazaoAfluenteConsolidado())
            )
            .satisfies(a ->
                assertThat(a.getVazaoIncrementalConsolidado())
                    .as("check vazaoIncrementalConsolidado")
                    .isEqualTo(expected.getVazaoIncrementalConsolidado())
            )
            .satisfies(a ->
                assertThat(a.getVazaoNaturalConsolidado())
                    .as("check vazaoNaturalConsolidado")
                    .isEqualTo(expected.getVazaoNaturalConsolidado())
            )
            .satisfies(a ->
                assertThat(a.getNivelReservatorioLido()).as("check nivelReservatorioLido").isEqualTo(expected.getNivelReservatorioLido())
            )
            .satisfies(a ->
                assertThat(a.getNivelReservatorioConsolidado())
                    .as("check nivelReservatorioConsolidado")
                    .isEqualTo(expected.getNivelReservatorioConsolidado())
            )
            .satisfies(a -> assertThat(a.getDataPublicacao()).as("check dataPublicacao").isEqualTo(expected.getDataPublicacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAcomphUpdatableRelationshipsEquals(Acomph expected, Acomph actual) {
        assertThat(actual)
            .as("Verify Acomph relationships")
            .satisfies(a -> assertThat(a.getNumPostoMedicao()).as("check numPostoMedicao").isEqualTo(expected.getNumPostoMedicao()));
    }
}
